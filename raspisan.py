import asyncio
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message

TOKEN = "7801672319:AAHwF0XcbyCmwpmmTl4z8XoT0yjS0LTOG10"  # üîπ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
CHAT_ID = -1002214740308  # üîπ –ó–∞–º–µ–Ω–∏ –Ω–∞ ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã (–Ω—É–∂–µ–Ω —Å "-" –¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø!)

# –°–ø–∏—Å–æ–∫ –¥–µ–∂—É—Ä–Ω—ã—Ö
duty_list = ["–ê—Ä—Ç–µ–º—å–µ–≤–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "–ë—É–¥—Ä–∏–Ω–∞ –ê—Ä–∏–Ω–∞", "–í–µ–Ω—Ü–æ–≤ –ê–Ω–¥—Ä–µ–π", "–í–µ—Ç—Ä–µ–Ω–∫–æ –ê—Ä—Ç–µ–º", "–î—É—Ä—è–≥–∏–Ω–∞ –ê–ª–µ—Å—è", "–ï—Ä—à–æ–≤ –ï–≤–≥–µ–Ω–∏–π",
      "–ñ–∏–ª–∏–Ω—Å–∫–∏–π –¢–∏–º—É—Ä", "–ó–∞–æ—Å—Ç—Ä–æ–≤—Ü–µ–≤ –ú–∏—Ö–∞–∏–ª", "–ö–ª–∞–¥–æ–≤–∏–∫–æ–≤ –ö–∏—Ä–∏–ª–ª", "–ö–æ—Ä—è–∫–∏–Ω –ò–ª—å—è", "–ö–æ—Ç–æ–≤ –ê–Ω—Ç–æ–Ω", "–õ—è–º–∏–Ω –ú–∞–∫—Å–∏–º", 
      "–ú–∞–∫–∞—Ä—å–∏–Ω –ê–Ω—Ç–æ–Ω", "–ú–∞–ª–∞—Ö–æ–≤ –ï–≥–æ—Ä", "–ù–∞—É–º–æ–≤ –ò–ª—å—è", "–ù–µ–≤–∑–æ—Ä–æ–≤ –Ø–∫–æ–≤", "–ü–∞–Ω—é–∫–æ–≤ –î–∞–Ω–∏–ª", "–ü–µ–∫–∏—à–µ–≤ –†–æ–º–∞–Ω", "–†—ã–∂–∫–æ–≤ –î–∞–Ω–∏–ª", 
      "–°—ë–º–∏–Ω –ú–∞–∫—Å–∏–º", "–°–æ–∫–æ–ª–æ–≤–∞ –î–∞–Ω–∞ ", "–°—Ç—Ä–∏–∂–æ–≤ –°–µ—Ä–≥–µ–π", "–¢–æ–ª—Å—Ç–∏–∫–æ–≤ –î–∞–Ω–∏–∏–ª", "–¢—Ä–µ–º–±–∞ –ò–≤–∞–Ω", "–¢—Ä–µ—Ç—å—è–∫–æ–≤ –í–ª–∞–¥–∏—Å–ª–∞–≤", "–¢—é—Ç—Ä–∏–Ω –ê–Ω—Ç–æ–Ω",
      "–£–≤–∞—Ä–æ–≤–∞ –ê—Ä–∏–Ω–∞", "–ß–∏—Ä–∫–æ–≤ –ù–∏–∫–∏—Ç–∞", "–®–∞–ø–æ—Ä–æ–≤ –ö–∏—Ä–∏–ª–ª"]
duty_index = 0  # –ò–Ω–¥–µ–∫—Å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–∂—É—Ä–Ω—ã—Ö

bot = Bot(TOKEN)
dp = Dispatcher()

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–º–µ–Ω—ã —Å–ø–∏—Å–∫–∞ –¥–µ–∂—É—Ä–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
@dp.message(Command("set_duty"))
async def set_duty(message: Message):
    global duty_list, duty_index
    if message.chat.id != CHAT_ID:
        return  # –ë–æ—Ç –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –≤–Ω–µ –≥—Ä—É–ø–ø—ã
    
    if message.from_user.id != 5191687357:  # üîπ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID
        await message.reply("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    new_list = message.text.replace("/set_duty", "").strip().split(",")
    if len(new_list) < 2:
        await message.reply("‚ùå –ú–∏–Ω–∏–º—É–º 2 –¥–µ–∂—É—Ä–Ω—ã—Ö!")
        return

    duty_list = [name.strip() for name in new_list]
    duty_index = 0  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å
    await message.reply(f"‚úÖ –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –¥–µ–∂—É—Ä–Ω—ã—Ö: {', '.join(duty_list)}")

# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –¥–µ–∂—É—Ä–Ω—ã—Ö **–ø–æ –æ—á–µ—Ä–µ–¥–∏**
def get_next_duty():
    global duty_index
    duty_today = [duty_list[duty_index % len(duty_list)], duty_list[(duty_index + 1) % len(duty_list)]]
    duty_index = (duty_index + 2) % len(duty_list)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞ 2 (—á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å)
    return duty_today

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ 8:00
async def send_daily_message():
    while True:
        now = datetime.now()
        target_time = now.replace(hour=8, minute=0, second=0, microsecond=0)  # 8:00 —É—Ç—Ä–∞
        
        # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –ø–æ–∑–∂–µ 8:00, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–ª—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
        if now > target_time:
            target_time += timedelta(days=1)
        
        # –ü—Ä–æ–ø—É—Å–∫ –≤—ã—Ö–æ–¥–Ω—ã—Ö (—Å—É–±–±–æ—Ç–∞ –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
        while target_time.weekday() >= 5:  # 5 - —Å—É–±–±–æ—Ç–∞, 6 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
            target_time += timedelta(days=1)
        
        sleep_time = (target_time - now).total_seconds()
        await asyncio.sleep(sleep_time)
        
        duty_today = get_next_duty()
        message = f"\U0001F468‚Äçüè´ –î–µ–∂—É—Ä–Ω—ã–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n- {duty_today[0]}\n- {duty_today[1]}"
        await bot.send_message(CHAT_ID, message, disable_notification=False)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
async def main():
    asyncio.create_task(send_daily_message())
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
